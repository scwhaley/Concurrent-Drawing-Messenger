[{"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\index.js":"1","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\App.js":"2","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\reportWebVitals.js":"3","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Login\\Login.js":"4","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Sidebar\\Sidebar.js":"5","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Sidebar\\ConversationItem.js":"6","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Signup\\Signup.js":"7","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Welcome\\Welcome.js":"8","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\User.js":"9","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Signup\\SignupError.js":"10","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Login\\authenticate.js":"11","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Utils\\FetchErr.js":"12","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Utils\\FetchErrorWrapper.js":"13","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\AppContexts\\canvasWebSocketContext.js":"14","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Utils\\GetJWTPayloadDecoded.js":"15","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\MainSite\\ContentArea\\ContentArea.js":"16","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\MainSite\\ContentArea\\CanvasSelector\\CanvasSelector.js":"17","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\MainSite\\ContentArea\\DrawingCanvas\\Line.js":"18","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\MainSite\\ContentArea\\DrawingCanvas\\Message.js":"19","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\MainSite\\ContentArea\\DrawingCanvas\\DrawingCanvas.js":"20","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\MainSite\\MainSite.js":"21","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\MainSite\\Header\\Header.js":"22","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\MainSite\\ContentArea\\CanvasSelector\\CanvasItem.js":"23","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Utils\\Page.js":"24","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Utils\\PrivatePage.js":"25","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\MainSite\\ContentArea\\CanvasSelector\\NewCanvas.js":"26","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Utils\\Modal.js":"27","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\MainSite\\ContentArea\\CanvasSelector\\NewCanvasForm.js":"28"},{"size":591,"mtime":1617719136617,"results":"29","hashOfConfig":"30"},{"size":860,"mtime":1617719145220,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"32","hashOfConfig":"30"},{"size":3809,"mtime":1617719136618,"results":"33","hashOfConfig":"30"},{"size":1459,"mtime":1615750891583,"results":"34","hashOfConfig":"30"},{"size":452,"mtime":1612193904354,"results":"35","hashOfConfig":"30"},{"size":3489,"mtime":1615745912435,"results":"36","hashOfConfig":"30"},{"size":926,"mtime":1617400183358,"results":"37","hashOfConfig":"30"},{"size":186,"mtime":1615055969747,"results":"38","hashOfConfig":"30"},{"size":279,"mtime":1615135038844,"results":"39","hashOfConfig":"30"},{"size":245,"mtime":1615662006982,"results":"40","hashOfConfig":"30"},{"size":696,"mtime":1615660010183,"results":"41","hashOfConfig":"30"},{"size":294,"mtime":1615658893866,"results":"42","hashOfConfig":"30"},{"size":129,"mtime":1615754513273,"results":"43","hashOfConfig":"30"},{"size":114,"mtime":1616865913196,"results":"44","hashOfConfig":"30"},{"size":979,"mtime":1617569520288,"results":"45","hashOfConfig":"30"},{"size":1869,"mtime":1617743230603,"results":"46","hashOfConfig":"30"},{"size":226,"mtime":1613492805363,"results":"47","hashOfConfig":"30"},{"size":171,"mtime":1613059736323,"results":"48","hashOfConfig":"30"},{"size":7624,"mtime":1617571573092,"results":"49","hashOfConfig":"30"},{"size":600,"mtime":1617719184093,"results":"50","hashOfConfig":"30"},{"size":371,"mtime":1617311590540,"results":"51","hashOfConfig":"30"},{"size":332,"mtime":1617317070128,"results":"52","hashOfConfig":"30"},{"size":308,"mtime":1617719166851,"results":"53","hashOfConfig":"30"},{"size":856,"mtime":1617719164942,"results":"54","hashOfConfig":"30"},{"size":602,"mtime":1617722101212,"results":"55","hashOfConfig":"30"},{"size":472,"mtime":1617742575509,"results":"56","hashOfConfig":"30"},{"size":707,"mtime":1617742790168,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1f87043",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\index.js",[],["122","123"],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\App.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\reportWebVitals.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Login\\Login.js",["124"],"import React, { useState } from 'react'\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport './Login.css';\r\nimport User from \"../User\"\r\nimport fetchErr from '../Utils/FetchErr';\r\n\r\nfunction Login(){\r\n    var [username, setUsername] = useState(\"\");\r\n    var [password, setPassword] = useState(\"\");\r\n    var [successfulLogin, setSuccessfulLogin] = useState(false);\r\n    var [credsInvalid, setCredsInvalid] = useState(false);\r\n\r\n    //Get browser history\r\n    let history = useHistory();\r\n\r\n    var usernameChangeHandler = (event) => {\r\n        setUsername(event.target.value);\r\n        console.log(\"Username = \" + username);\r\n    }\r\n\r\n    var passwordChangeHandler = (event) => {\r\n        setPassword(event.target.value);\r\n        console.log(\"Password = \" + password);\r\n    }\r\n\r\n    //Upon log in submission, redirect the user to the page they came from\r\n    var loginSubmitHandler = (event) => {\r\n        var user = new User(username, password);\r\n        console.log(JSON.stringify(user));\r\n\r\n        //Post user credentials to login URL\r\n        fetchErr('http://localhost:8080/api/public/login',\r\n                {method: 'POST', \r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(user)\r\n                })\r\n                .then(response => {\r\n                    return response.headers;\r\n                })\r\n                //If successful, then get the JWT out of the Authorization header and store in local storage\r\n                .then(headers => {\r\n                    let JWT = headers.get('Authorization');\r\n                    localStorage.setItem('JWT', JWT);\r\n                    console.log('Set JWT in local storage')\r\n                    return true;\r\n                })\r\n                .then(successful => {\r\n                    console.log(successful)\r\n                    if(successful === true){\r\n                        console.log(\"Going back...\")\r\n                        setSuccessfulLogin(true);\r\n                        setCredsInvalid(false);\r\n                    };\r\n                })\r\n                //If unsuccessful. log the error\r\n                .catch(error => {\r\n                    setCredsInvalid(true);\r\n                    error.response.json()\r\n                    .then(json => {\r\n                        console.log(json)\r\n                    })\r\n                });\r\n\r\n        //Prevent page refresh\r\n        event.preventDefault(); \r\n    }\r\n\r\n    if(successfulLogin){\r\n        return <Redirect push to=\"/main\"/>\r\n    }\r\n\r\n    var onInvalidCredentials = (credsInvalid) => {\r\n        return credsInvalid ? <div className='invalidCreds'>Invalid credentials</div> : null;\r\n    }\r\n    \r\n\r\n\r\n    return(\r\n        <div className=\"loginPage\">\r\n            <div className='loginContainer'>\r\n                <h2>Login</h2>\r\n                <div className=\"loginFormContainer\">\r\n                    <form className=\"loginForm\">\r\n                        {onInvalidCredentials(credsInvalid)}\r\n                        <input className=\"loginUsername\" type=\"text\" placeholder=\"Username\" onChange={usernameChangeHandler} aria-label=\"Login Username\"></input>\r\n                        <input className=\"loginPassword\" type=\"password\" placeholder=\"Password\" onChange={passwordChangeHandler} aria-label=\"Login Password\"></input>\r\n                        <Link to=\"/login\"className=\"forgotPassword\">Forgot Password?</Link>\r\n                        <button className=\"submitButton\" onClick={loginSubmitHandler}>Log In</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div className=\"signUpLinkContainer\">\r\n                <span>Don't have an account? </span><Link to=\"/signup\" className=\"signUpLink\">Sign up here!</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default Login;","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Sidebar\\Sidebar.js",[],["125","126"],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Sidebar\\ConversationItem.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Signup\\Signup.js",["127","128"],"import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport User from \"../User\"\r\nimport fetchErr from '../Utils/FetchErr';\r\nimport SignupError from \"./SignupError\"\r\n\r\nfunction Signup(){\r\n\r\n    var [username, setUsername] = useState('');\r\n    var [password, setPassword] = useState('');\r\n    var [confirmPassword, setConfirmPassword] = useState('');\r\n    var [submitError, setSubmitError] = useState(false);\r\n    var [errorMessage, setErrorMessage] = useState('');\r\n\r\n    let history = useHistory();\r\n\r\n    function testAPI(){\r\n        setSubmitError(false);\r\n        var newUser = new User(username, password);\r\n\r\n        fetchErr('http://localhost:8080/api/public/signup', \r\n        {method: 'POST', \r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(newUser)\r\n        })\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n        .then(responseBody => {\r\n            console.log(\"Message is: \\n\\n\" + responseBody.message)\r\n        })\r\n        .then(() => {\r\n            //can't just put history.push('/login') because the first argument of setTimeout\r\n            //expects a callback. If we were to just pass in history.push('/login'), then it\r\n            //would execute history.push then provide the return (undefined) as the argument to setTimeout\r\n            setTimeout(() => history.push('/login'), 1000);\r\n        })\r\n        .catch(error => {\r\n            console.log(\"In Catch\")\r\n            setSubmitError(true);\r\n            console.log(error.response)\r\n            error.response.json().then(responseBody => {\r\n                console.log(\"Message is: \" + responseBody.message)\r\n            })           \r\n        })\r\n    }\r\n\r\n\r\n    function testSecured(){\r\n        var JWT = localStorage.getItem('JWT')\r\n        fetchErr('http://localhost:8080/api/secured/greeting', \r\n        {method: 'GET', \r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + JWT\r\n        },\r\n        })\r\n        .then(response => response.json())\r\n        .then(json => console.log(json))\r\n        .catch(error => {\r\n            console.log(\"Error JSON: \" + error.responseJSON);\r\n            //console.log(error.responseJSON.message);\r\n        })\r\n        ;\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1>This is the Signup Page</h1>\r\n            <h2>Sign up here!</h2>\r\n            <h2>The error message is: {errorMessage}</h2>\r\n            <form>\r\n                <input id=\"chooseUsername\" type=\"text\" placeholder=\"Choose Username\" aria-label=\"Choose Username\" onChange={e => setUsername(e.target.value)}></input><br/>\r\n                <input id=\"choosePassword\" type=\"text\" placeholder=\"Choose Password\" aria-label=\"Choose Password\" onChange={e => setPassword(e.target.value)}></input><br/>\r\n                <input id=\"confirmPassword\" type=\"text\" placeholder=\"Confirm Password\" aria-label=\"Confirm Password\" onChange={e => setConfirmPassword(e.target.value)}></input><br/>\r\n                <div className=\"submitButton\">\r\n                    <input id=\"createAccount\" type=\"submit\" value=\"Create Account\"/>\r\n                </div>\r\n            </form>\r\n            <button onClick={testAPI}>Send GET</button>\r\n            <SignupError submitError={submitError} errorMessage={errorMessage}/>\r\n            <button onClick={testSecured}>Test Secured</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Signup;","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Welcome\\Welcome.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\User.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Signup\\SignupError.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Login\\authenticate.js",[],["129","130"],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Utils\\FetchErr.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Utils\\FetchErrorWrapper.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\AppContexts\\canvasWebSocketContext.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Utils\\GetJWTPayloadDecoded.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\MainSite\\ContentArea\\ContentArea.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\MainSite\\ContentArea\\CanvasSelector\\CanvasSelector.js",["131","132"],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\MainSite\\ContentArea\\DrawingCanvas\\Line.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\MainSite\\ContentArea\\DrawingCanvas\\Message.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\MainSite\\ContentArea\\DrawingCanvas\\DrawingCanvas.js",["133","134"],"import React, { Component } from 'react';\r\nimport './DrawingCanvas.css';\r\nimport { Client } from '@stomp/stompjs';\r\nimport Line from './Line';\r\nimport Message from './Message';\r\nimport fetchErr from '../../../Utils/FetchErr'\r\n\r\nclass DrawingCanvas extends Component{\r\n    constructor(){\r\n        super();\r\n        this.subscribe();\r\n        this.setState({\r\n            canvasIsPopulated: false\r\n        })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        // Canvas Setup\r\n        var canvas = document.getElementById('CanvasID');\r\n        var ctx = canvas.getContext('2d');\r\n\r\n        //Resize canvas\r\n        canvas.width = 600;\r\n        canvas.height = 600;\r\n\r\n        //Must add event listeners this way. Adding them directly to the canvas HTML element\r\n        //doesn't connect the mouse event object to the function.\r\n        canvas.addEventListener(\"mousedown\", this.canvasOnMouseDown, false);\r\n        canvas.addEventListener(\"mouseup\", this.canvasOnMouseUp, false);\r\n        canvas.addEventListener(\"mousemove\", this.cavasOnMouseMove, false);\r\n        canvas.addEventListener(\"touchstart\", this.touchToMouseEventConverted, false);\r\n        canvas.addEventListener(\"touchend\", this.touchToMouseEventConverted, false);\r\n        canvas.addEventListener(\"touchmove\", this.touchToMouseEventConverted, false);\r\n        canvas.addEventListener(\"touchcancel\", this.touchToMouseEventConverted, false);\r\n\r\n        this.state.stompClient.activate();\r\n\r\n        this.setState({\r\n            canvasContext: ctx,\r\n            canvas: canvas\r\n        });\r\n    }\r\n\r\n    //Touch event converter\r\n    //https://stackoverflow.com/questions/1517924/javascript-mapping-touch-events-to-mouse-events\r\n    touchToMouseEventConverted = (e) => {\r\n        var touches = e.changedTouches,\r\n        first = touches[0],\r\n        type = \"\";\r\n        switch(e.type)\r\n        {\r\n            case \"touchstart\": type = \"mousedown\"; break;\r\n            case \"touchmove\":  type = \"mousemove\"; break;        \r\n            case \"touchend\":   type = \"mouseup\";   break;\r\n            default:           return;\r\n        }\r\n\r\n        var simulatedEvent = document.createEvent(\"MouseEvent\");\r\n        simulatedEvent.initMouseEvent(type, true, true, window, 1, \r\n                                    first.screenX, first.screenY, \r\n                                    first.clientX, first.clientY, false, \r\n                                    false, false, false, 0/*left*/, null);\r\n\r\n        first.target.dispatchEvent(simulatedEvent);\r\n        e.preventDefault();\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this.unsubscribe();\r\n    }\r\n\r\n    subscribe = () => {\r\n        //STOMP Client setup\r\n        var stompClient;\r\n\r\n        var stompConfig = {\r\n            connectHeaders: {\r\n                login: \"guest\",\r\n                passcode: \"guest\"\r\n            },\r\n            brokerURL: \"ws://localhost:8080/greeting/websocket\",\r\n            reconnectDelay: 200,\r\n            onConnect: (frame) => {\r\n                console.log(\"Connected\");\r\n                //This subscription is for listening to draw commands from all users subsrived to the canvas\r\n                const subscription = this.state.stompClient.subscribe(\"/topic/message/\" + this.props.selectedCanvas.canvasID, this.handleIncomingMessages);\r\n                //This message is only to send a one-time request to synchronize the canvases.\r\n                var syncMessage = new Message(\"Sync\", \"\");\r\n                this.state.stompClient.publish({destination: \"/topic/message/\" + this.props.selectedCanvas.canvasID, body: JSON.stringify(syncMessage)})\r\n                this.setState({\r\n                    subscription: subscription\r\n                })\r\n            }\r\n        };\r\n\r\n        stompClient = new Client(stompConfig);\r\n\r\n        this.state = {\r\n            stompClient: stompClient,\r\n            mouseIsDown: false,\r\n            canvas: null,\r\n            canvasContext: null,\r\n            canvasLastX: 0,\r\n            canvasLastY: 0,\r\n            subscription: null\r\n        };\r\n    }\r\n\r\n    unsubscribe = () => {\r\n        console.log('unsubscribing');\r\n        this.state.subscription.unsubscribe();\r\n    }\r\n\r\n    handleIncomingMessages = (message) => {        \r\n        // Parse the message\r\n        const payload = JSON.parse(message.body);\r\n        const content = payload.content;\r\n\r\n        // Call the appropriate function based on message type\r\n        switch(payload.type) {\r\n            case \"Draw\":\r\n                this.drawLine(this.state.canvasContext, content.x1, content.y1, content.x2, content.y2);\r\n                if(!this.state.canvasIsPopulated){\r\n                    this.setState({canvasIsPopulated: true});\r\n                }\r\n                break;\r\n            case \"Refresh\":\r\n                console.log('Handling Refresh Message');\r\n                this.drawImageToCanvas(this.state.canvas, this.state.canvasContext, content);\r\n                if(!this.state.canvasIsPopulated){\r\n                    this.setState({canvasIsPopulated: true});\r\n                }\r\n                break;\r\n            case \"Sync\":\r\n                if(this.state.canvasIsPopulated){\r\n                    this.handleSync(this.state.canvas);\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    //Uses a dataURL to draw an image to the canvas\r\n    //Make sure to clear the canvas first to prevent the images from stacking and causing \"darkening and blur\"\r\n    drawImageToCanvas = (canvas, context, imgDataURL) => {\r\n        var img = new Image();\r\n        img.onload = () => {    \r\n            context.clearRect(0, 0, canvas.width, canvas.height);\r\n            context.drawImage(img,0,0);\r\n        };\r\n        img.src = imgDataURL;\r\n    }\r\n\r\n    // Sends a message containing an dataURL representing the current state of the canvas\r\n    handleSync = (canvas) => {\r\n        var canvasDataURL = canvas.toDataURL();\r\n        var message = new Message(\"Refresh\", canvasDataURL);\r\n        this.state.stompClient.publish({destination: \"/topic/message/\" + this.props.selectedCanvas.canvasID, body: JSON.stringify(message)});\r\n    }\r\n\r\n    // Drawing functions\r\n    canvasOnMouseDown = (e) => {\r\n        this.setState({\r\n            mouseIsDown: true,\r\n            canvasLastX: e.offsetX,\r\n            canvasLastY: e.offsetY\r\n        })\r\n    }\r\n\r\n    // Drawing functions\r\n    canvasOnMouseUp = (e) => {\r\n        this.setState({\r\n            mouseIsDown: false,\r\n            canvasLastX: e.offsetX,\r\n            canvasLastY: e.offsetY\r\n        })\r\n    }\r\n\r\n    // Drawing functions\r\n    cavasOnMouseMove = (e) => {\r\n        if(this.state.mouseIsDown){\r\n            var line = new Line(this.state.canvasLastX, this.state.canvasLastY, e.offsetX, e.offsetY);\r\n            var message = new Message(\"Draw\", line);\r\n            this.state.stompClient.publish({destination: \"/topic/message/\" + this.props.selectedCanvas.canvasID, body: JSON.stringify(message)});\r\n            this.setState({\r\n                canvasLastX: e.offsetX,\r\n                canvasLastY: e.offsetY\r\n            })\r\n        }\r\n    }\r\n\r\n    // Drawing functions\r\n    drawLine = (context, x1, y1, x2, y2) => {\r\n        context.beginPath();\r\n        context.strokeStyle = \"black\";\r\n        context.lineWidth = 1;\r\n        context.moveTo(x1, y1);\r\n        context.lineTo(x2,y2);\r\n        context.stroke();\r\n        context.closePath();\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"canvasContainer\">\r\n                <canvas id=\"CanvasID\"/>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default DrawingCanvas","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\MainSite\\MainSite.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\MainSite\\Header\\Header.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\MainSite\\ContentArea\\CanvasSelector\\CanvasItem.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Utils\\Page.js",["135"],"import { useEffect } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst Page = (props) => {\r\n\r\n  useEffect(() => {\r\n    document.title = props.title || \"\";\r\n  }, [props.title]);\r\n  \r\n  return <Route path={props.path} exact={props.exact} children={props.children}/>;\r\n};\r\n\r\nexport default Page;","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Utils\\PrivatePage.js",["136"],"import { Route, Redirect } from \"react-router-dom\";\r\nimport GetJWTPayloadDecoded from './GetJWTPayloadDecoded';\r\nimport Page from './Page'\r\n\r\nfunction PrivatePage(props) {\r\n    var jwtIsExpired = false;\r\n\r\n    var jwt = localStorage.getItem('JWT');\r\n\r\n    if (jwt !== null){\r\n        var decodedJwtPayload = JSON.parse(GetJWTPayloadDecoded(jwt));\r\n\r\n        //JWT expiration is in seconds, but Date expects milliseconds\r\n        const jwtExp = new Date(decodedJwtPayload.exp*1000);\r\n        const now = new Date();\r\n    \r\n        if (now.getTime() > jwtExp.getTime()){\r\n            console.log(\"JWT is expired\")\r\n            jwtIsExpired = true;\r\n        }\r\n    }\r\n\r\n    return( (jwtIsExpired | jwt === null) ? <Redirect to=\"/login\"/> : <Page path={props.path} exact={props.exact} children={props.children} title={props.title}/>)\r\n}\r\n\r\nexport default PrivatePage;","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\MainSite\\ContentArea\\CanvasSelector\\NewCanvas.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Utils\\Modal.js",["137"],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\MainSite\\ContentArea\\CanvasSelector\\NewCanvasForm.js",[],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":14,"column":9,"nodeType":"144","messageId":"145","endLine":14,"endColumn":16},{"ruleId":"138","replacedBy":"146"},{"ruleId":"140","replacedBy":"147"},{"ruleId":"142","severity":1,"message":"148","line":11,"column":10,"nodeType":"144","messageId":"145","endLine":11,"endColumn":25},{"ruleId":"142","severity":1,"message":"149","line":13,"column":24,"nodeType":"144","messageId":"145","endLine":13,"endColumn":39},{"ruleId":"138","replacedBy":"150"},{"ruleId":"140","replacedBy":"151"},{"ruleId":"142","severity":1,"message":"152","line":2,"column":10,"nodeType":"144","messageId":"145","endLine":2,"endColumn":18},{"ruleId":"153","severity":1,"message":"154","line":32,"column":8,"nodeType":"155","endLine":32,"endColumn":10,"suggestions":"156"},{"ruleId":"142","severity":1,"message":"157","line":6,"column":8,"nodeType":"144","messageId":"145","endLine":6,"endColumn":16},{"ruleId":"158","severity":1,"message":"159","line":98,"column":9,"nodeType":"160","endLine":98,"endColumn":13},{"ruleId":"142","severity":1,"message":"152","line":2,"column":17,"nodeType":"144","messageId":"145","endLine":2,"endColumn":25},{"ruleId":"142","severity":1,"message":"161","line":1,"column":10,"nodeType":"144","messageId":"145","endLine":1,"endColumn":15},{"ruleId":"162","severity":1,"message":"163","line":8,"column":25,"nodeType":"164","messageId":"165","endLine":8,"endColumn":27},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar",["166"],["167"],"'confirmPassword' is assigned a value but never used.","'setErrorMessage' is assigned a value but never used.",["166"],["167"],"'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'canvasListToListItems'. Either include it or remove the dependency array.","ArrayExpression",["168"],"'fetchErr' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","ThisExpression","'Route' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},"Update the dependencies array to be: [canvasListToListItems]",{"range":"171","text":"172"},[1155,1157],"[canvasListToListItems]"]