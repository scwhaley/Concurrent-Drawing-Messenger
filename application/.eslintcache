[{"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\index.js":"1","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\App.js":"2","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\reportWebVitals.js":"3","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Login\\Login.js":"4","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Sidebar\\Sidebar.js":"5","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\DrawingCanvas\\DrawingCanvas.js":"6","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Sidebar\\ConversationItem.js":"7","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\DrawingCanvas\\Line.js":"8","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\DrawingCanvas\\Message.js":"9","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Signup\\Signup.js":"10","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Welcome\\Welcome.js":"11","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Login\\authenticate.js":"12","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\User.js":"13","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Signup\\SignupError.js":"14","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Utils\\PrivateRoute.js":"15","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Utils\\fetchJSON.js":"16","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Utils\\FetchJSONError.js":"17","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Utils\\FetchJSON.js":"18"},{"size":618,"mtime":1613664120393,"results":"19","hashOfConfig":"20"},{"size":1409,"mtime":1615395126195,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":3060,"mtime":1615395954594,"results":"23","hashOfConfig":"20"},{"size":1636,"mtime":1612193957003,"results":"24","hashOfConfig":"20"},{"size":4534,"mtime":1613578899315,"results":"25","hashOfConfig":"20"},{"size":452,"mtime":1612193904354,"results":"26","hashOfConfig":"20"},{"size":226,"mtime":1613492805363,"results":"27","hashOfConfig":"20"},{"size":171,"mtime":1613059736323,"results":"28","hashOfConfig":"20"},{"size":3110,"mtime":1615480005071,"results":"29","hashOfConfig":"20"},{"size":722,"mtime":1615395109918,"results":"30","hashOfConfig":"20"},{"size":307,"mtime":1615394180609,"results":"31","hashOfConfig":"20"},{"size":186,"mtime":1615055969747,"results":"32","hashOfConfig":"20"},{"size":279,"mtime":1615135038844,"results":"33","hashOfConfig":"20"},{"size":357,"mtime":1613948935107,"results":"34","hashOfConfig":"20"},{"size":754,"mtime":1615220696469,"results":"35","hashOfConfig":"20"},{"size":340,"mtime":1615220701349,"results":"36","hashOfConfig":"20"},{"size":942,"mtime":1615479527357,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"1f87043",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"41"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\index.js",["79","80","81"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["82","83"],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\App.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\reportWebVitals.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Login\\Login.js",["84","85"],"import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport './Login.css';\r\nimport {authenticate} from \"./authenticate\";\r\nimport User from \"../User\"\r\nimport fetchJSON from \"../Utils/FetchJSON\";\r\n\r\nfunction Login(){\r\n    var [username, setUsername] = useState(\"\");\r\n    var [password, setPassword] = useState(\"\");\r\n\r\n    //Get browser history\r\n    let history = useHistory();\r\n\r\n    var usernameChangeHandler = (event) => {\r\n        setUsername(event.target.value);\r\n        console.log(\"Username = \" + username);\r\n    }\r\n\r\n    var passwordChangeHandler = (event) => {\r\n        setPassword(event.target.value);\r\n        console.log(\"Password = \" + password);\r\n    }\r\n\r\n    //Upon log in submission, redirect the user to the page they came from\r\n    var loginSubmitHandler = (event) => {\r\n        var user = new User(username, password);\r\n        console.log(JSON.stringify(user));\r\n\r\n        //Post user credentials to login URL\r\n        fetchJSON('http://localhost:8080/login',\r\n                {method: 'POST', \r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(user)\r\n                })\r\n                .then(response => {\r\n                    console.log(response);\r\n                    return response.headers;\r\n                })\r\n                //If successful, then get the JWT out of the Authorization header and store in local storage\r\n                .then(headers => {\r\n                    let JWT = headers.get('Authorization');\r\n                    localStorage.setItem('JWT', JWT);\r\n                    console.log('Set JWT in local storage')\r\n                    return true;\r\n                })\r\n                .then(successful => {\r\n                    console.log(successful)\r\n                    if(successful == true){\r\n                        console.log(\"Going back...\")\r\n                        history.goBack()\r\n                    };\r\n                })\r\n                //If unsuccessful. log the error\r\n                .catch(error => {\r\n                    console.log(\"Error.response: \" + error.response);\r\n                    console.log(\"Error.responseJSON: \" + error.responseJSON);\r\n                });\r\n\r\n        event.preventDefault(); \r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"loginPage\">\r\n            <div className=\"loginForm\">\r\n                <h2>Login</h2>\r\n                <form onSubmit={loginSubmitHandler}>\r\n                    <input id=\"loginUsername\" type=\"text\" placeholder=\"Username\" onChange={usernameChangeHandler} aria-label=\"Login Username\"></input><br/>\r\n                    <input id=\"loginPassword\" type=\"text\" placeholder=\"Password\" onChange={passwordChangeHandler} aria-label=\"Login Password\"></input><br/>\r\n                    <div className=\"submitButton\">\r\n                        <input id=\"submit\" type=\"submit\" value=\"Submit\"/>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default Login","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Sidebar\\Sidebar.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\DrawingCanvas\\DrawingCanvas.js",["86"],"import React, { Component } from 'react';\r\nimport './DrawingCanvas.css';\r\nimport { Client } from '@stomp/stompjs';\r\nimport Line from './Line'\r\nimport Message from './Message'\r\n\r\nclass DrawingCanvas extends Component{\r\n    constructor(){\r\n        super();\r\n\r\n        //STOMP Client setup\r\n        var stompClient;\r\n\r\n        var stompConfig = {\r\n            connectHeaders: {\r\n                login: \"guest\",\r\n                passcode: \"guest\"\r\n            },\r\n            brokerURL: \"ws://localhost:8080/greeting/websocket\",\r\n            reconnectDelay: 200,\r\n            onConnect: (frame) => {\r\n                console.log(\"Connected\");\r\n                const subscription = this.state.stompClient.subscribe(\"/topic/test/room1\", this.handleIncomingMessages);\r\n            }\r\n        };\r\n\r\n        stompClient = new Client(stompConfig);\r\n\r\n        this.state = {\r\n            stompClient: stompClient,\r\n            mouseIsDown: false,\r\n            canvas: null,\r\n            canvasContext: null,\r\n            canvasLastX: 0,\r\n            canvasLastY: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        // Canvas Setup\r\n        var canvas = document.getElementById('CanvasID');\r\n        var ctx = canvas.getContext('2d');\r\n\r\n        //Must add event listeners this way. Adding them directly to the canvas HTML element\r\n        // does connect the mouse event object to the function.\r\n        canvas.addEventListener(\"mousedown\", this.canvasOnMouseDown, false);\r\n        canvas.addEventListener(\"mouseup\", this.canvasOnMouseUp, false);\r\n        canvas.addEventListener(\"mousemove\", this.cavasOnMouseMove, false);\r\n\r\n        this.state.stompClient.activate();\r\n\r\n        this.setState({\r\n            canvasContext: ctx,\r\n            canvas: canvas\r\n        });\r\n    }\r\n\r\n    handleIncomingMessages = (message) => {\r\n        console.log(message);\r\n        \r\n        // Parse the message\r\n        const payload = JSON.parse(message.body);\r\n        const content = payload.content;\r\n\r\n        // Call the appropriate function based on message type\r\n        switch(payload.type) {\r\n            case \"Draw\":\r\n                this.drawLine(this.state.canvasContext, content.x1, content.y1, content.x2, content.y2);\r\n                break;\r\n            case \"Refresh\":\r\n                this.drawImageToCanvas(content);\r\n                break;\r\n            case \"Sync\":\r\n                this.handleSync();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    // Uses a dataURL to draw an image to the canvas\r\n    drawImageToCanvas = (imgDataURL) => {\r\n        var img = new Image();\r\n        img.onload = () => {\r\n            this.state.canvasContext.drawImage(img,0,0);\r\n        };\r\n        img.src = imgDataURL;\r\n    }\r\n\r\n    // Sends a message containing an dataURL representing the current state of the canvas\r\n    handleSync = () => {\r\n        var canvasDataURL = this.state.canvas.toDataURL();\r\n        var message = new Message(\"Refresh\", canvasDataURL);\r\n        this.state.stompClient.publish({destination: \"/app/message/room1\", body: JSON.stringify(message)});\r\n    }\r\n\r\n    // Drawing functions\r\n    canvasOnMouseDown = (e) => {\r\n        this.setState({\r\n            mouseIsDown: true,\r\n            canvasLastX: e.offsetX,\r\n            canvasLastY: e.offsetY\r\n        })\r\n    }\r\n\r\n    // Drawing functions\r\n    canvasOnMouseUp = (e) => {\r\n        this.setState({\r\n            mouseIsDown: false,\r\n            canvasLastX: e.offsetX,\r\n            canvasLastY: e.offsetY\r\n        })\r\n    }\r\n\r\n    // Drawing functions\r\n    cavasOnMouseMove = (e) => {\r\n        if(this.state.mouseIsDown){\r\n            var line = new Line(this.state.canvasLastX, this.state.canvasLastY, e.offsetX, e.offsetY);\r\n            var message = new Message(\"Draw\", line);\r\n            this.state.stompClient.publish({destination: \"/app/message/room1\", body: JSON.stringify(message)});\r\n            this.setState({\r\n                canvasLastX: e.offsetX,\r\n                canvasLastY: e.offsetY\r\n            })\r\n        }\r\n    }\r\n\r\n    // Drawing functions\r\n    drawLine = (context, x1, y1, x2, y2) => {\r\n        context.beginPath();\r\n        context.strokeStyle = \"black\";\r\n        context.lineWidth = 1;\r\n        context.moveTo(x1, y1);\r\n        context.lineTo(x2,y2);\r\n        context.stroke();\r\n        context.closePath();\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <canvas id=\"CanvasID\" />\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default DrawingCanvas","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Sidebar\\ConversationItem.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\DrawingCanvas\\Line.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\DrawingCanvas\\Message.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Signup\\Signup.js",["87","88"],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Welcome\\Welcome.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Login\\authenticate.js",["89"],"import fetchJSON from \"../Utils/FetchJSON\";\r\n\r\nexport function authenticate(user){\r\n    \r\n\r\n}\r\n\r\nexport function checkIfAlreadyLoggedIn(){\r\n    var isLoggedInLocalStorage = localStorage.getItem(\"isLoggedIn\");\r\n    var isLoggedIn = isLoggedInLocalStorage === \"True\" ? true : false;\r\n    return isLoggedIn;\r\n}","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\User.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Signup\\SignupError.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Utils\\PrivateRoute.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Utils\\fetchJSON.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Utils\\FetchJSONError.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Utils\\FetchJSON.js",[],{"ruleId":"90","severity":1,"message":"91","line":5,"column":3,"nodeType":"92","messageId":"93","endLine":5,"endColumn":9},{"ruleId":"90","severity":1,"message":"94","line":6,"column":3,"nodeType":"92","messageId":"93","endLine":6,"endColumn":8},{"ruleId":"90","severity":1,"message":"95","line":7,"column":3,"nodeType":"92","messageId":"93","endLine":7,"endColumn":7},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"90","severity":1,"message":"100","line":4,"column":9,"nodeType":"92","messageId":"93","endLine":4,"endColumn":21},{"ruleId":"101","severity":1,"message":"102","line":51,"column":35,"nodeType":"103","messageId":"104","endLine":51,"endColumn":37},{"ruleId":"90","severity":1,"message":"105","line":23,"column":23,"nodeType":"92","messageId":"93","endLine":23,"endColumn":35},{"ruleId":"90","severity":1,"message":"106","line":10,"column":10,"nodeType":"92","messageId":"93","endLine":10,"endColumn":25},{"ruleId":"90","severity":1,"message":"107","line":82,"column":10,"nodeType":"92","messageId":"93","endLine":82,"endColumn":32},{"ruleId":"90","severity":1,"message":"108","line":1,"column":8,"nodeType":"92","messageId":"93","endLine":1,"endColumn":17},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Link' is defined but never used.","no-native-reassign",["109"],"no-negated-in-lhs",["110"],"'authenticate' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'subscription' is assigned a value but never used.","'confirmPassword' is assigned a value but never used.","'fetchWithErrorHandling' is defined but never used.","'fetchJSON' is defined but never used.","no-global-assign","no-unsafe-negation"]