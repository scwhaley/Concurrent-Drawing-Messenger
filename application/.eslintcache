[{"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\index.js":"1","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\App.js":"2","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\reportWebVitals.js":"3","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Login\\Login.js":"4","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Sidebar\\Sidebar.js":"5","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\DrawingCanvas\\DrawingCanvas.js":"6","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Sidebar\\ConversationItem.js":"7","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\DrawingCanvas\\Line.js":"8","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\DrawingCanvas\\Message.js":"9","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Signup\\Signup.js":"10","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Welcome\\Welcome.js":"11","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\User.js":"12","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Signup\\SignupError.js":"13","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Utils\\PrivateRoute.js":"14","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Login\\authenticate.js":"15","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Utils\\FetchErr.js":"16","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Utils\\FetchErrorWrapper.js":"17","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\AppContexts\\canvasWebSocketContext.js":"18","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\DrawingCanvas\\DrawingCanvasFuntional.js":"19","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\DrawingCanvas\\STOMPtest.js":"20","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\DrawingCanvas\\CanvasSelector.js":"21","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\MainArea\\MainArea.js":"22","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Utils\\GetJWTPayloadDecoded.js":"23"},{"size":618,"mtime":1616682011349,"results":"24","hashOfConfig":"25"},{"size":1173,"mtime":1616867731257,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"25"},{"size":3172,"mtime":1616686160447,"results":"28","hashOfConfig":"25"},{"size":1459,"mtime":1615750891583,"results":"29","hashOfConfig":"25"},{"size":6884,"mtime":1616793790949,"results":"30","hashOfConfig":"25"},{"size":452,"mtime":1612193904354,"results":"31","hashOfConfig":"25"},{"size":226,"mtime":1613492805363,"results":"32","hashOfConfig":"25"},{"size":171,"mtime":1613059736323,"results":"33","hashOfConfig":"25"},{"size":3489,"mtime":1615745912435,"results":"34","hashOfConfig":"25"},{"size":795,"mtime":1616864121531,"results":"35","hashOfConfig":"25"},{"size":186,"mtime":1615055969747,"results":"36","hashOfConfig":"25"},{"size":279,"mtime":1615135038844,"results":"37","hashOfConfig":"25"},{"size":805,"mtime":1616867285071,"results":"38","hashOfConfig":"25"},{"size":245,"mtime":1615662006982,"results":"39","hashOfConfig":"25"},{"size":696,"mtime":1615660010183,"results":"40","hashOfConfig":"25"},{"size":294,"mtime":1615658893866,"results":"41","hashOfConfig":"25"},{"size":129,"mtime":1615754513273,"results":"42","hashOfConfig":"25"},{"size":5338,"mtime":1616081543114,"results":"43","hashOfConfig":"25"},{"size":1707,"mtime":1616081543088,"results":"44","hashOfConfig":"25"},{"size":1539,"mtime":1616770594745,"results":"45","hashOfConfig":"25"},{"size":954,"mtime":1616770662728,"results":"46","hashOfConfig":"25"},{"size":114,"mtime":1616865913196,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"1f87043",{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"51"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"51"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"51"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\index.js",["102","103","104"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["105","106"],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\App.js",["107","108","109","110","111","112"],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\reportWebVitals.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Login\\Login.js",["113"],"import React, { useState } from 'react'\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport './Login.css';\r\nimport User from \"../User\"\r\nimport fetchErr from '../Utils/FetchErr';\r\n\r\nfunction Login(){\r\n    var [username, setUsername] = useState(\"\");\r\n    var [password, setPassword] = useState(\"\");\r\n    var [successfulLogin, setSuccessfulLogin] = useState(false);\r\n\r\n    //Get browser history\r\n    let history = useHistory();\r\n\r\n    var usernameChangeHandler = (event) => {\r\n        setUsername(event.target.value);\r\n        console.log(\"Username = \" + username);\r\n    }\r\n\r\n    var passwordChangeHandler = (event) => {\r\n        setPassword(event.target.value);\r\n        console.log(\"Password = \" + password);\r\n    }\r\n\r\n    //Upon log in submission, redirect the user to the page they came from\r\n    var loginSubmitHandler = (event) => {\r\n        var user = new User(username, password);\r\n        console.log(JSON.stringify(user));\r\n\r\n        //Post user credentials to login URL\r\n        fetchErr('http://localhost:8080/api/public/login',\r\n                {method: 'POST', \r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(user)\r\n                })\r\n                .then(response => {\r\n                    return response.headers;\r\n                })\r\n                //If successful, then get the JWT out of the Authorization header and store in local storage\r\n                .then(headers => {\r\n                    let JWT = headers.get('Authorization');\r\n                    localStorage.setItem('JWT', JWT);\r\n                    console.log('Set JWT in local storage')\r\n                    return true;\r\n                })\r\n                .then(successful => {\r\n                    console.log(successful)\r\n                    if(successful === true){\r\n                        console.log(\"Going back...\")\r\n                        setSuccessfulLogin(true);\r\n                    };\r\n                })\r\n                //If unsuccessful. log the error\r\n                .catch(error => {\r\n                    error.response.json()\r\n                    .then(json => {\r\n                        console.log(json)\r\n                    })\r\n                });\r\n\r\n        //Prevent page refresh\r\n        event.preventDefault(); \r\n    }\r\n\r\n    if(successfulLogin){\r\n        return <Redirect push to=\"/main\"/>\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"loginPage\">\r\n            <div className=\"loginForm\">\r\n                <h2>Login</h2>\r\n                <form onSubmit={loginSubmitHandler}>\r\n                    <input id=\"loginUsername\" type=\"text\" placeholder=\"Username\" onChange={usernameChangeHandler} aria-label=\"Login Username\"></input><br/>\r\n                    <input id=\"loginPassword\" type=\"text\" placeholder=\"Password\" onChange={passwordChangeHandler} aria-label=\"Login Password\"></input><br/>\r\n                    <div className=\"submitButton\">\r\n                        <input id=\"submit\" type=\"submit\" value=\"Submit\"/>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default Login","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Sidebar\\Sidebar.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\DrawingCanvas\\DrawingCanvas.js",["114"],"import React, { Component } from 'react';\r\nimport './DrawingCanvas.css';\r\nimport { Client } from '@stomp/stompjs';\r\nimport Line from './Line';\r\nimport Message from './Message';\r\nimport fetchErr from '../Utils/FetchErr'\r\n\r\nclass DrawingCanvas extends Component{\r\n    constructor(){\r\n        super();\r\n        this.subscribe();\r\n        this.setState({\r\n            canvasIsPopulated: false\r\n        })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        // Canvas Setup\r\n        var canvas = document.getElementById('CanvasID');\r\n        var ctx = canvas.getContext('2d');\r\n\r\n        //Must add event listeners this way. Adding them directly to the canvas HTML element\r\n        //doesn't connect the mouse event object to the function.\r\n        canvas.addEventListener(\"mousedown\", this.canvasOnMouseDown, false);\r\n        canvas.addEventListener(\"mouseup\", this.canvasOnMouseUp, false);\r\n        canvas.addEventListener(\"mousemove\", this.cavasOnMouseMove, false);\r\n\r\n        this.state.stompClient.activate();\r\n\r\n        this.setState({\r\n            canvasContext: ctx,\r\n            canvas: canvas\r\n        });\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this.unsubscribe();\r\n    }\r\n\r\n    subscribe = () => {\r\n        //STOMP Client setup\r\n        var stompClient;\r\n\r\n        var stompConfig = {\r\n            connectHeaders: {\r\n                login: \"guest\",\r\n                passcode: \"guest\"\r\n            },\r\n            brokerURL: \"ws://localhost:8080/greeting/websocket\",\r\n            reconnectDelay: 200,\r\n            onConnect: (frame) => {\r\n                console.log(\"Connected\");\r\n                //This subscription is for listening to draw commands from all users subsrived to the canvas\r\n                const subscription = this.state.stompClient.subscribe(\"/topic/message/room1\", this.handleIncomingMessages);\r\n                //This message is only to send a one-time request to synchronize the canvases.\r\n                var syncMessage = new Message(\"Sync\", \"\");\r\n                this.state.stompClient.publish({destination: \"/topic/message/room1\", body: JSON.stringify(syncMessage)})\r\n                this.setState({\r\n                    subscription: subscription\r\n                })\r\n            }\r\n        };\r\n\r\n        stompClient = new Client(stompConfig);\r\n\r\n        this.state = {\r\n            stompClient: stompClient,\r\n            mouseIsDown: false,\r\n            canvas: null,\r\n            canvasContext: null,\r\n            canvasLastX: 0,\r\n            canvasLastY: 0,\r\n            subscription: null\r\n        };\r\n    }\r\n\r\n    unsubscribe = () => {\r\n        console.log('unsubscribing');\r\n        this.state.subscription.unsubscribe();\r\n    }\r\n\r\n    handleIncomingMessages = (message) => {\r\n        console.log('Recieved message: ' + message);\r\n        \r\n        // Parse the message\r\n        const payload = JSON.parse(message.body);\r\n        const content = payload.content;\r\n\r\n        // Call the appropriate function based on message type\r\n        switch(payload.type) {\r\n            case \"Draw\":\r\n                this.drawLine(this.state.canvasContext, content.x1, content.y1, content.x2, content.y2);\r\n                if(!this.state.canvasIsPopulated){\r\n                    this.setState({canvasIsPopulated: true});\r\n                }\r\n                break;\r\n            case \"Refresh\":\r\n                console.log('Handling Refresh Message');\r\n                this.drawImageToCanvas(this.state.canvas, this.state.canvasContext, content);\r\n                if(!this.state.canvasIsPopulated){\r\n                    this.setState({canvasIsPopulated: true});\r\n                }\r\n                break;\r\n            case \"Sync\":\r\n                if(this.state.canvasIsPopulated){\r\n                    this.handleSync(this.state.canvas);\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    //Uses a dataURL to draw an image to the canvas\r\n    //Make sure to clear the canvas first to prevent the images from stacking and causing \"darkening and blur\"\r\n    drawImageToCanvas = (canvas, context, imgDataURL) => {\r\n        var img = new Image();\r\n        img.onload = () => {    \r\n            context.clearRect(0, 0, canvas.width, canvas.height);\r\n            context.drawImage(img,0,0);\r\n        };\r\n        img.src = imgDataURL;\r\n    }\r\n\r\n    // Sends a message containing an dataURL representing the current state of the canvas\r\n    handleSync = (canvas) => {\r\n        \r\n        var canvasDataURL = canvas.toDataURL();\r\n        var message = new Message(\"Refresh\", canvasDataURL);\r\n        this.state.stompClient.publish({destination: \"/topic/message/room1\", body: JSON.stringify(message)});\r\n    }\r\n\r\n    // Drawing functions\r\n    canvasOnMouseDown = (e) => {\r\n        this.setState({\r\n            mouseIsDown: true,\r\n            canvasLastX: e.offsetX,\r\n            canvasLastY: e.offsetY\r\n        })\r\n    }\r\n\r\n    // Drawing functions\r\n    canvasOnMouseUp = (e) => {\r\n        this.setState({\r\n            mouseIsDown: false,\r\n            canvasLastX: e.offsetX,\r\n            canvasLastY: e.offsetY\r\n        })\r\n    }\r\n\r\n    // Drawing functions\r\n    cavasOnMouseMove = (e) => {\r\n        if(this.state.mouseIsDown){\r\n            var line = new Line(this.state.canvasLastX, this.state.canvasLastY, e.offsetX, e.offsetY);\r\n            var message = new Message(\"Draw\", line);\r\n            this.state.stompClient.publish({destination: \"/topic/message/room1\", body: JSON.stringify(message)});\r\n            this.setState({\r\n                canvasLastX: e.offsetX,\r\n                canvasLastY: e.offsetY\r\n            })\r\n        }\r\n    }\r\n\r\n    // Drawing functions\r\n    drawLine = (context, x1, y1, x2, y2) => {\r\n        context.beginPath();\r\n        context.strokeStyle = \"black\";\r\n        context.lineWidth = 1;\r\n        context.moveTo(x1, y1);\r\n        context.lineTo(x2,y2);\r\n        context.stroke();\r\n        context.closePath();\r\n    };\r\n\r\n    testSecured = () => {\r\n        fetchErr('http://localhost:8080/api/secured/subscriptions',\r\n                {method: 'GET', \r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization':  'Bearer ' + localStorage.getItem('JWT')\r\n                }\r\n                })\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            json.forEach((canvas, index) => {\r\n                console.log(\"At index \" + index + \": \" + canvas.name)\r\n            });\r\n        })\r\n        .catch(err => {\r\n            err.response.json().then(json => console.log(json));\r\n        });\r\n    }   \r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <canvas id=\"CanvasID\" />\r\n                <h1>dfgdfg</h1>\r\n                <button onClick={this.testSecured}>Test secured</button>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default DrawingCanvas","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Sidebar\\ConversationItem.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\DrawingCanvas\\Line.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\DrawingCanvas\\Message.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Signup\\Signup.js",["115","116"],"import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport User from \"../User\"\r\nimport fetchErr from '../Utils/FetchErr';\r\nimport SignupError from \"./SignupError\"\r\n\r\nfunction Signup(){\r\n\r\n    var [username, setUsername] = useState('');\r\n    var [password, setPassword] = useState('');\r\n    var [confirmPassword, setConfirmPassword] = useState('');\r\n    var [submitError, setSubmitError] = useState(false);\r\n    var [errorMessage, setErrorMessage] = useState('');\r\n\r\n    let history = useHistory();\r\n\r\n    function testAPI(){\r\n        setSubmitError(false);\r\n        var newUser = new User(username, password);\r\n\r\n        fetchErr('http://localhost:8080/api/public/signup', \r\n        {method: 'POST', \r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(newUser)\r\n        })\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n        .then(responseBody => {\r\n            console.log(\"Message is: \\n\\n\" + responseBody.message)\r\n        })\r\n        .then(() => {\r\n            //can't just put history.push('/login') because the first argument of setTimeout\r\n            //expects a callback. If we were to just pass in history.push('/login'), then it\r\n            //would execute history.push then provide the return (undefined) as the argument to setTimeout\r\n            setTimeout(() => history.push('/login'), 1000);\r\n        })\r\n        .catch(error => {\r\n            console.log(\"In Catch\")\r\n            setSubmitError(true);\r\n            console.log(error.response)\r\n            error.response.json().then(responseBody => {\r\n                console.log(\"Message is: \" + responseBody.message)\r\n            })           \r\n        })\r\n    }\r\n\r\n\r\n    function testSecured(){\r\n        var JWT = localStorage.getItem('JWT')\r\n        fetchErr('http://localhost:8080/api/secured/greeting', \r\n        {method: 'GET', \r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + JWT\r\n        },\r\n        })\r\n        .then(response => response.json())\r\n        .then(json => console.log(json))\r\n        .catch(error => {\r\n            console.log(\"Error JSON: \" + error.responseJSON);\r\n            //console.log(error.responseJSON.message);\r\n        })\r\n        ;\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1>This is the Signup Page</h1>\r\n            <h2>Sign up here!</h2>\r\n            <h2>The error message is: {errorMessage}</h2>\r\n            <form>\r\n                <input id=\"chooseUsername\" type=\"text\" placeholder=\"Choose Username\" aria-label=\"Choose Username\" onChange={e => setUsername(e.target.value)}></input><br/>\r\n                <input id=\"choosePassword\" type=\"text\" placeholder=\"Choose Password\" aria-label=\"Choose Password\" onChange={e => setPassword(e.target.value)}></input><br/>\r\n                <input id=\"confirmPassword\" type=\"text\" placeholder=\"Confirm Password\" aria-label=\"Confirm Password\" onChange={e => setConfirmPassword(e.target.value)}></input><br/>\r\n                <div className=\"submitButton\">\r\n                    <input id=\"createAccount\" type=\"submit\" value=\"Create Account\"/>\r\n                </div>\r\n            </form>\r\n            <button onClick={testAPI}>Send GET</button>\r\n            <SignupError submitError={submitError} errorMessage={errorMessage}/>\r\n            <button onClick={testSecured}>Test Secured</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Signup;","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Welcome\\Welcome.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\User.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Signup\\SignupError.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Utils\\PrivateRoute.js",["117","118"],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Login\\authenticate.js",[],["119","120"],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Utils\\FetchErr.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Utils\\FetchErrorWrapper.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\AppContexts\\canvasWebSocketContext.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\DrawingCanvas\\DrawingCanvasFuntional.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\DrawingCanvas\\STOMPtest.js",["121","122"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { Client } from '@stomp/stompjs';\r\n\r\nfunction STOMPtest(){\r\n    // By using an empty array as the second parameter, this effect will only run on mount and dismount\r\n    var stompClient = useRef();\r\n\r\n    useEffect(() => {\r\n        console.log('Start of useEffect');\r\n        \r\n        var handleIncomingMessages = (message) => {\r\n            console.log('in handle incoming message. Message: ' + message.body);\r\n            stompClient.current.publish\r\n        }\r\n\r\n        //STOMP Client setup\r\n        var stompConfig = {\r\n            connectHeaders: {\r\n                login: \"guest\",\r\n                passcode: \"guest\"\r\n            },\r\n            brokerURL: \"ws://localhost:8080/greeting/websocket\",\r\n            reconnectDelay: 200,\r\n            onConnect: (frame) => {\r\n                console.log(\"Connected\");\r\n                console.log(\"Subscribing to /topic/test/room1\");\r\n                const subscription = stompClient.current.subscribe(\"/topic/test/room1\", handleIncomingMessages);\r\n            }\r\n        };\r\n\r\n        //Activate STOMP client\r\n        console.log('Acivating stomp client');\r\n        stompClient.current = new Client(stompConfig);\r\n        stompClient.current.activate();\r\n    \r\n        console.log('end of useEffect');\r\n    },[]);\r\n\r\n    var testOnClick = () => {\r\n        stompClient.current.publish({destination: \"/app/message/room1\", body: \"Test Click\"});\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1>Blank (for now)</h1>\r\n            <button/><button/><button/><button/>\r\n            <button onClick={testOnClick}>TestClick</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default STOMPtest;\r\n\r\n","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\DrawingCanvas\\CanvasSelector.js",["123"],"import React, { useEffect, useState } from 'react'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport fetchErr from '../Utils/FetchErr';\r\n\r\nfunction CanvasSelector(props){\r\n\r\n    var [canvases, setCanvases] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchErr('http://localhost:8080/api/secured/subscriptions',\r\n                {method: 'GET', \r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization':  'Bearer ' + localStorage.getItem('JWT')\r\n                }\r\n                })\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            console.log(\"returned from fetch: \" + json)\r\n            var listItems = canvasListToListItems(json);\r\n            console.log('listItems count = ' + listItems.count)\r\n            setCanvases(listItems);\r\n        })\r\n        .catch(err => {\r\n            err.response.json().then(json => console.log(json));\r\n        });\r\n    }, [])\r\n\r\n\r\n\r\n    var canvasListToListItems = (canvasList) => {\r\n        var elementList = canvasList.map((canvas) => \r\n            <li onClick={() => props.setSelectedCanvas(canvas.name)}>{canvas.name}</li>\r\n        );\r\n        console.log(elementList)\r\n        return elementList;\r\n    }\r\n\r\n    if(props.selectedCanvas !== ''){\r\n        return <Redirect push to='/main/canvas'/>\r\n    }\r\n    \r\n    return(\r\n        <div className=\"loginPage\">\r\n            <ul>\r\n                {canvases}\r\n            </ul>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default CanvasSelector;","C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\MainArea\\MainArea.js",[],"C:\\Users\\Spencer\\source\\repos\\scwhaley\\Concurrent-Drawing-Messenger\\application\\src\\Utils\\GetJWTPayloadDecoded.js",[],{"ruleId":"124","severity":1,"message":"125","line":5,"column":3,"nodeType":"126","messageId":"127","endLine":5,"endColumn":9},{"ruleId":"124","severity":1,"message":"128","line":6,"column":3,"nodeType":"126","messageId":"127","endLine":6,"endColumn":8},{"ruleId":"124","severity":1,"message":"129","line":7,"column":3,"nodeType":"126","messageId":"127","endLine":7,"endColumn":7},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"124","severity":1,"message":"134","line":8,"column":8,"nodeType":"126","messageId":"127","endLine":8,"endColumn":15},{"ruleId":"124","severity":1,"message":"135","line":9,"column":8,"nodeType":"126","messageId":"127","endLine":9,"endColumn":21},{"ruleId":"124","severity":1,"message":"136","line":13,"column":8,"nodeType":"126","messageId":"127","endLine":13,"endColumn":30},{"ruleId":"124","severity":1,"message":"137","line":14,"column":8,"nodeType":"126","messageId":"127","endLine":14,"endColumn":31},{"ruleId":"124","severity":1,"message":"138","line":15,"column":8,"nodeType":"126","messageId":"127","endLine":15,"endColumn":17},{"ruleId":"124","severity":1,"message":"139","line":16,"column":8,"nodeType":"126","messageId":"127","endLine":16,"endColumn":22},{"ruleId":"124","severity":1,"message":"140","line":13,"column":9,"nodeType":"126","messageId":"127","endLine":13,"endColumn":16},{"ruleId":"141","severity":1,"message":"142","line":66,"column":9,"nodeType":"143","endLine":66,"endColumn":13},{"ruleId":"124","severity":1,"message":"144","line":11,"column":10,"nodeType":"126","messageId":"127","endLine":11,"endColumn":25},{"ruleId":"124","severity":1,"message":"145","line":13,"column":24,"nodeType":"126","messageId":"127","endLine":13,"endColumn":39},{"ruleId":"124","severity":1,"message":"146","line":1,"column":10,"nodeType":"126","messageId":"127","endLine":1,"endColumn":18},{"ruleId":"124","severity":1,"message":"147","line":3,"column":8,"nodeType":"126","messageId":"127","endLine":3,"endColumn":16},{"ruleId":"130","replacedBy":"148"},{"ruleId":"132","replacedBy":"149"},{"ruleId":"124","severity":1,"message":"146","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"150","line":26,"column":23,"nodeType":"126","messageId":"127","endLine":26,"endColumn":35},{"ruleId":"151","severity":1,"message":"152","line":27,"column":8,"nodeType":"153","endLine":27,"endColumn":10,"suggestions":"154"},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Link' is defined but never used.","no-native-reassign",["155"],"no-negated-in-lhs",["156"],"'Sidebar' is defined but never used.","'DrawingCanvas' is defined but never used.","'canvasWebSocketContext' is defined but never used.","'DrawingCanvasFunctional' is defined but never used.","'STOMPtest' is defined but never used.","'CanvasSelector' is defined but never used.","'history' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","ThisExpression","'confirmPassword' is assigned a value but never used.","'setErrorMessage' is assigned a value but never used.","'useState' is defined but never used.","'fetchErr' is defined but never used.",["155"],["156"],"'subscription' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'canvasListToListItems'. Either include it or remove the dependency array.","ArrayExpression",["157"],"no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},"Update the dependencies array to be: [canvasListToListItems]",{"range":"160","text":"161"},[967,969],"[canvasListToListItems]"]